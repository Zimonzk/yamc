#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition;

out vec2 UV;
  
// Values that stay constant for the whole mesh.
uniform float scale = 1;
uniform vec3 position;
uniform vec3 CameraRight_worldspace;
uniform mat4 VP;

void main() {
  int c = gl_VertexID % 6;
  vec3 up = vec3(0.0f, 1.0f, 0.0f);
  vec3 vertexPosition_worldspace = position
    + CameraRight_worldspace * vertexPosition.x * scale
    + up * vertexPosition.y * scale;

  gl_Position = VP * vec4(vertexPosition_worldspace, 1.0f);

  switch(c) {
    case 0:
    case 3:
      UV.x=0.0;
      UV.y=0.0;
      break;
    case 1:
      UV.x=1.0;
      UV.y=0.0;
      break;
    case 2:
    case 4:
      UV.x=1.0;
      UV.y=1.0;
      break;
    case 5:
      UV.x=0.0;
      UV.y=1.0;
      break;
  }
}
